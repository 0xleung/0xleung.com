{"version":3,"sources":["images/avatar-h.jpeg","images/twitter.svg","images/github.svg","images/medium.svg","images/juejin.svg","pages/page1/Page1.tsx","pages/sign/sign.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["CenterOuter","styled","maxWidth","margin","color","backgroundColor","ITitle","textAlign","padding","ISubTitle","IText","IAvatar","width","height","background","avatarHoverImage","filter","backgroundSize","borderRadius","IAbout","SizedBox","props","children","Box","sx","display","SocialLink","image","path","href","target","rel","opacity","ILink","textDecoration","fontWeight","position","top","textTransform","SocialLinkText","title","Page1","style","minHeight","paddingBottom","twitterIcon","githubIcon","mediumIcon","juejinIcon","fontSize","bottom","MetamaskSign","window","ethereum","isMetaMask","selectedAddress","ethers","providers","Web3Provider","this","getProvider","getSigner","msg","signer","signMessage","signature","toString","addr","sig","utils","verifyMessage","signerAddr","toLowerCase","console","log","Sign","useState","setSig","accountAdress","setAccountAdress","useEffect","isMetamaskInstalled","alert","isMetamaskLocked","request","method","then","getAddress","address","lineHeight","Button","variant","onClick","a","sign","s","location","App","CssBaseline","element","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","hostname","match","Leung","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7a926130.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-h.5d3a3ecd.jpeg\";","export default __webpack_public_path__ + \"static/media/twitter.4e7e3b9a.svg\";","export default __webpack_public_path__ + \"static/media/github.e21209f2.svg\";","export default __webpack_public_path__ + \"static/media/medium.daa4b05b.svg\";","export default __webpack_public_path__ + \"static/media/juejin.9985862a.svg\";","import Box from '@mui/material/Box/Box';\nimport { styled } from '@mui/system';\n\nimport avatarHoverImage from '../../images/avatar-h.jpeg'\n\nimport twitterIcon from '../../images/twitter.svg'\nimport githubIcon from '../../images/github.svg'\nimport mediumIcon from '../../images/medium.svg'\nimport juejinIcon from '../../images/juejin.svg'\n\nconst CenterOuter = styled('div')({\n    maxWidth: '1140px',\n    margin: '0 auto',\n    color: '#111',\n    backgroundColor: '#fff',\n});\n\nconst ITitle = styled('h1')({\n    textAlign: 'center',\n    margin: 0,\n    padding: 0,\n});\n\nconst ISubTitle = styled('h3')({\n    textAlign: 'center',\n    margin: 0,\n    padding: 0,\n});\n\nconst IText = styled('div')({\n    textAlign: 'center',\n});\n\nconst IAvatar = styled('div')({\n    width: '235px',\n    height: '235px',\n    margin: '0 auto',\n    background: `#eee url(${avatarHoverImage}) center center no-repeat`,\n    filter: 'brightness(0.5) contrast(155%)',\n    \":hover\": {\n        filter: 'none',\n    },\n    backgroundSize: 'cover',\n    borderRadius: '50%',\n});\n\nconst IAbout = styled('div')({\n    maxWidth: '600px',\n    width: '90vw',\n    margin: '0 auto',\n    color: '#fff',\n    backgroundColor: '#4e5dab',\n    padding: '20px',\n});\n\nexport type SizedBoxProps = {\n    width?: string,\n    height?: string,\n    children?: JSX.Element | JSX.Element[] | string\n}\n\nexport const SizedBox = (props: SizedBoxProps)=>{\n    const {width, height, children,} = props;\n    return (\n              <Box sx={{\n                  width: width ?? 0,\n                  height: height ?? 0,\n                  display: 'inline-block',\n              }}>\n                  {children}\n              </Box>\n    )\n}\n\nexport type SocialLinkProps = {\n    image?: string,\n    title?: string,\n    path?: string,\n}\n\nexport const SocialLink = (props: SocialLinkProps)=>{\n    const {image, path,} = props;\n    return (\n            <a href={path} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Box sx={{\n                    width: '24px',\n                    height: '24px',\n                    margin: '0 auto',\n                    display: 'inline-block',\n                    background: `url(${image}) center center no-repeat`,\n                    \":hover\": {\n                        opacity: 0.7,\n                    },\n                    backgroundSize: 'cover',\n                    borderRadius: '50%',\n                }} />\n            </a>\n    )\n}\n\nconst ILink = styled('a')({\n    textDecoration: 'none',\n    color: '#000',\n    fontWeight: 'bold',\n    position: 'relative',\n    top: '-5px',\n    textTransform: 'uppercase',\n    ':active': {\n        color: '#000',\n    }\n});\n\nexport const SocialLinkText = (props: SocialLinkProps)=>{\n    const {title, path,} = props;\n    return (\n            <ILink href={path} target=\"_blank\" rel=\"noopener noreferrer\">\n                {title}\n            </ILink>\n    )\n}\n\nconst Page1 = ():JSX.Element=>{\n\n    return (\n        <>\n            <Box style={{\n                minHeight: '100vh',\n                position: 'relative',\n                paddingBottom: '118px',\n            }}>\n                <CenterOuter>\n                    <SizedBox height='50px' />\n                    <ITitle >Profile</ITitle>\n                    <SizedBox height='30px' />\n                    <IText>\n                        I'm a full stack developer!\n                    </IText>\n                    <SizedBox height='30px' />\n                    <IAvatar/>\n                    <SizedBox height='30px' />\n                    <IAbout>\n                        <ITitle >About me</ITitle>\n                        <IText>\n                        I'm a full stack developer and I'm very interested in crypto right now, if you have some really cool ideas, you can contact me via the link below.\n                        </IText>\n                        <SizedBox height='10px' />\n                    </IAbout>\n                    <SizedBox height='30px' />\n                    <ITitle >Details</ITitle>\n                    <SizedBox height='5px' />\n                    <ISubTitle >Name:</ISubTitle>\n                    <IText>\n                        Jobin Leung\n                    </IText>\n                    <SizedBox height='5px' />\n                    <ISubTitle >Age:</ISubTitle>\n                    <IText>\n                        34\n                    </IText>\n                    <SizedBox height='5px' />\n                    <ISubTitle >Location:</ISubTitle>\n                    <IText>\n                        Earth\n                    </IText>\n                    <SizedBox height='50px' />\n                    <Box style={{\n                        textAlign: 'center',\n                    }}>\n                        \n                        <SocialLinkText title='blog' path=\"https://blog.jobinleung.me\" />\n                        <SizedBox width='10px' />\n                        <SocialLink image={twitterIcon} path=\"https://twitter.com/jobinleung\" />\n                        <SizedBox width='10px' />\n                        <SocialLink image={githubIcon} path=\"https://github.com/jobinleung\" />\n                        <SizedBox width='10px' />\n                        <SocialLink image={mediumIcon} path=\"https://medium.com/@jobinleung\" />\n                        <SizedBox width='10px' />\n                        <SocialLink image={juejinIcon} path=\"https://juejin.cn/user/729731451585319/posts\" />\n                    </Box>\n                    <SizedBox height='50px' />\n                </CenterOuter>\n\n                <footer style={{\n                    backgroundColor: '#333',\n                    color: '#fff',\n                    padding: '50px',\n                    textAlign: 'center',\n                    fontSize: '12px',\n                    position: 'absolute',\n                    bottom: 0,\n                    width: '100%',\n                }}>\n                  \n                    <IText>\n                        created by Jobin with ♥\n                    </IText>\n\n                </footer>\n            </Box>\n        </>\n    );\n}\n\nexport default Page1;","import Button from \"@mui/material/Button/Button\";\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Box } from \"@mui/system\";\n\n\nclass MetamaskSign {\n    public static isMetamaskInstalled(): boolean {\n        return typeof window.ethereum !== \"undefined\";\n    }\n\n    public static isMetamaskLocked(): boolean {\n        return typeof window.ethereum.isMetaMask !== \"undefined\" && !window.ethereum.isMetaMask;\n    }\n\n    public static getAccount(): string {\n        return window.ethereum.selectedAddress;\n    }\n\n    public static getProvider(): ethers.providers.JsonRpcProvider {\n        return new ethers.providers.Web3Provider(window.ethereum);\n    }\n\n    public static getSigner(): ethers.Signer {\n        return this.getProvider().getSigner();\n    }\n\n    public static async sign(msg: string): Promise<string> {\n        try {\n            const signer= new ethers.providers.Web3Provider(window.ethereum).getSigner();\n            const signature= await signer.signMessage(msg);\n            return signature;\n        } catch (error: any) {\n            return error.toString()\n        }\n    }\n\n    public static async verify({msg, addr, sig}: {msg:string, addr: string, sig:string}): Promise<boolean>{\n        try {\n            const signerAddr = await ethers.utils.verifyMessage(msg, sig);\n            return addr.toLowerCase() === signerAddr.toLowerCase();\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    }\n}\n\n\n/**\n * sign page\n */\nconst Sign = ()=>{\n\n    const [sig, setSig] = useState('');\n    const [accountAdress, setAccountAdress] = useState('');\n    \n\n    useEffect(() => {\n        if(!MetamaskSign.isMetamaskInstalled())(\n            alert('Please open with Metamask')\n        )\n        if(!MetamaskSign.isMetamaskLocked()){\n            // connect wallet\n            window.ethereum.request({ method: 'eth_requestAccounts' })\n            .then(()=>{\n                // get signer address\n                return MetamaskSign.getSigner().getAddress()\n            }).then((address:string)=>{\n                setAccountAdress(address);\n            })\n        }\n    }, []); \n    \n    return (\n        <>\n            <div style={{height:'100vh',lineHeight:'100vh',textAlign:'center',}}>\n                <Box sx={{\n                    display: 'none',\n                }}>\n                {accountAdress}\n                {sig}\n                </Box>\n                <Button variant=\"contained\" onClick={async ()=>{\n                    const s = await MetamaskSign.sign('app metamask sign test');\n                    setSig(`${accountAdress}:${s}`)\n                    window.location.href = `https://medium.com/@jobinleung/mobile-app-connects-to-metamask-app-and-signs-via-deep-link-part-1-d3ec33069fae`;\n                }}>Sign</Button>\n            </div>\n        </>\n    )\n}\n\nexport default Sign;","import React from 'react';\n// import logo from './logo.svg';\nimport { Routes, Route } from \"react-router-dom\";\nimport CssBaseline from '@mui/material/CssBaseline';\n\n\nimport './App.css';\n\nimport Page1 from './pages/page1/Page1';\nimport Sign from './pages/sign/sign';\n\n\nconst App = ():JSX.Element=> {\n  return (\n    <>\n      <CssBaseline/>\n      <Routes>\n        <Route path=\"/sign\" element={<Sign />} />\n        <Route path=\"/\" element={<Page1 />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {FC} from 'react';\nimport {hydrate, render} from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst Leung: FC = ()=>{\n  return <React.StrictMode>\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n  </React.StrictMode>;\n};\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <BrowserRouter>\n//       <Provider store={store}>\n//         <App />\n//       </Provider>\n//     </BrowserRouter>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nconst rootElement = document.getElementById('root');\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(<Leung />, rootElement);\n} else {\n  render(<Leung />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}